<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Serial.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>23, 22</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAIAAAAPgAAAG0AAAB0AAAAXgAAAEoAAAAvAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACQAAAHcAAADhAAAA/wAAAP8AAAD/AAAA9AAAANgAAAB8AAAAHQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABEAAAA5wAAAP4AAADkAAAAzgAAANcAAAD3AAAA/wAAAPsAAADFAAAAKQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAHcAAAD/AAAA4wAAAFwAAAAjAAAALgAAAFMAAACpAAAA9wAA
        AP8AAACgAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA8AAACgAAAA/wAAAPcAAACpAAAAUwAAAC4AAAAiAAAATwAAAN0AAAD/AAAAbwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkAAADGAAAA/AAAAP8AAAD2AAAA1wAAAM0AAADeAAAA/gAA
        AOcAAAA+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAACCAAAA2AAAAPkAAAD/AAAA/wAA
        AP8AAADuAAAAegAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAvAAAAUwAA
        AGkAAAB3AAAAcQAAAEUAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////9////4B///8AP///AB///gAP//8OD///Bw///wMH//2DD3/gA
        AgfgAAAD4AAAA8AAAAPBwABBw4GAw8MBAcOCAAODwAAAB8AAAAfAAAAH4EAAH/nCBj//wwP//8OD///B
        w///wAP//+AD///wA///+Af///+f//////8=
</value>
  </data>
</root>